/* Feat created by Ceremorph 11/25/15
Boosts immunity of the creature based on level  */

#include "x2_inc_spellhook"
#include "aaa_racial_ability_inc"
#include "aaa_constants"

void main()
{
	if (!X2PreSpellCastCode())
    {	return;	}

    object oPC 		= OBJECT_SELF;
	object oTarget	= GetSpellTargetObject();
	int nSpell 		= GetSpellId();
	int iLevel;
	int iClass;
	
	switch (nSpell)
	{
		case 484 :		// Archon  Aura of Menace
			PS_Ability_ArchonAura(oTarget, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 574 :		//Yuan-ti Halfblood Chameleon Power
			PS_Ability_YTHBChameleonPower(oPC, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 576 :		//Hound Archon Canine Form
			PS_Ability_CanineForm(oPC);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 578 :		//Hound Archon Hero Canine Form 2
			PS_Ability_CanineForm2(oPC);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 579 :		//Hound Archon Hero Damage Reduction
			PS_Ability_HoundDR(oPC, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 581 :		//Hound Archon Hero Sanctified Weapon
			PS_Ability_HoundWeapon(oPC, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 582 :		//Hound Archon Hero Aura of Menace
			PS_Ability_ArchonAura(oTarget, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 584 :		//Trumpet Archon Gets A Trumpet
			PS_Ability_TArchonTrumpet(oPC);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 585 :		//Trumpet Archon Trumpet Blade
			PS_Ability_TArchonBlade(oPC);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 588 :		//Trumpet/Word Archon Exalted Weapon
			PS_Ability_ExaltedWeapon(oPC, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 592 :		//Yuan-ti Halfblood Epithet (Snake Blood Bonus)
			PS_Ability_YTHBSnakeBloodBonus(oPC, nSpell);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1246 :		//Eladrin Alternate Form
			PS_Ability_EladrinForm(oPC);
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1443 :		//Fire, Frost, and Hill Giant Stride
		{	if (GetLevelByClass(CLASS_TYPE_FIRE_GIANT_PRC, oPC) != 0)
			{	iLevel = GetLevelByClass(CLASS_TYPE_FIRE_GIANT_PRC, oPC); iClass = 1;	}
			else if (GetLevelByClass(CLASS_TYPE_FROST_GIANT_PRC, oPC) != 0)
			{	iLevel = GetLevelByClass(CLASS_TYPE_FROST_GIANT_PRC, oPC); iClass = 1;	}
			else if (GetLevelByClass(CLASS_TYPE_HILL_GIANT_PRC, oPC) != 0)
			{	iLevel = GetLevelByClass(CLASS_TYPE_HILL_GIANT_PRC, oPC); iClass = 2;	}
			else	{	iLevel = 0;	}
			PS_Ability_GiantStride(oPC, iLevel, iClass, nSpell);	}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1446 :		//Astral, Monadic, and Movanic Deva Aura
			PS_Ability_DevaAura(oTarget, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1448 :		//Astral, Monadic, and Movanic Deva Weapon
		{	if (GetLevelByClass(CLASS_TYPE_ASTRAL_DEVA_PRC, oPC) >= 6)
			{	PS_Ability_AstralDevaWeapon(oPC, nSpell);	}
			else if (GetLevelByClass(CLASS_TYPE_MONADIC_DEVA_PRC, oPC) >= 6)
			{	PS_Ability_MonadicDevaWeapon(oPC, nSpell);	}
			else if (GetLevelByClass(CLASS_TYPE_MOVANIC_DEVA_PRC, oPC) >= 6)
			{	PS_Ability_MovanicDevaWeapon(oPC, nSpell);	}
			else	{	return;	}	}	
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1449 :		//Monadic Deva Deliverance From Death
			PS_Ability_DeliveranceFromDeath(oPC);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1450:		//Movanic Deva Heavenly Deflection
			PS_Ability_HeavenlyDeflection(oPC);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1456:		//Baatezu Blindsight
			PS_Ability_BaatezuBlindsight(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1457:		//Avariel Mind Over Body
			PS_Ability_AvarielMindOverBody(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1459:		//Drider Affinities (Hide/Move Silently)
			PS_Ability_DriderAffinities(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1464:		//Bralani Whirlwind Blast
			PS_Ability_BralaniWhirlBlast(oPC, oTarget, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1465:		//Bralani DR
			PS_Ability_EladrinDR(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1468:		//Eladrin Transcendent Strike
			PS_Ability_EladrinTransStrike(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1469:		//Firre Flaming Slam
			PS_Ability_FirreFlamingSlam(oPC, oTarget, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1471:		//Ghaele Light Ray
			PS_Ability_GhaeleLightRay(oPC, oTarget, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1472:		//Ghaele Bonus Domain
			PS_Ability_GhaeleBonusDomain(oPC);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1473:		//Ghaele Protective Aura
			PS_Ability_GhaeleAura(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1474:		//Ghaele Glow
			PS_Ability_GhaeleGlow(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1486:		//Xeph Innate Resistance
			PS_Ability_XephInnateResistance(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1491:		//Night Hag Deceitful
			PS_Ability_NHDeceitful(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1492:		//Night Hag Ineffably Evil
			PS_Ability_NHIneffablyEvil(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1495:		//Mistress of the Cauldron Craft Heartstone
			PS_Ability_MOTCCraftHeartstone(oPC, oTarget);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1658:		//Troglodyte Skill Affinity to Hide
			PS_Ability_TroglodyteHide(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1662:		//Troglodyte Stench
			PS_Ability_TroglodyteStench(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1686:		//Troll/Oni Regeneration
			PS_Ability_TrollRegeneration(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1738:		//Elan Resilience
			PS_Ability_ElanResilience(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1823:		//Succubus Draining Kiss
			PS_Ability_SuccubusDrainingKiss(oPC, oTarget, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1824:		//Succubus DR
			PS_Ability_SuccubusDR(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1826:		//Unholy Apothesis
			PS_Ability_UnholyApothesis(oPC);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1828:		//Marquis Cambion Alternate Form
			PS_Ability_MarqCambAlternateForm(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1829:		//Marquis Cambion Aligned Strike
			PS_Ability_MarqCambAlignedStrike(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1880:		//Change Self
			PS_Ability_ChangeSelf(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1882:		//Dark Flight
			PS_Ability_DarkFlight(oPC);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1884:		//Erinyes Rope of Entanglement
			PS_Ability_RopeOfEntanglement(oPC, oTarget, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1886:		//Erinyes DR
			PS_Ability_ErinyesDR(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1889:		//Brachina Regeneration
			PS_Ability_BrachinaRegeneration(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 1892:		//BrachinaDR
			PS_Ability_BrachinaDR(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 2603:		//Hezrou Stench
			PS_Ability_HezrouStench(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////	
		case 2606:		//Hezrou Aligned Strike
			PS_Ability_HezrouAlignedStrike(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 2608:		//Quasit and Imp Regeneration
			PS_Ability_FamiliarRegeneration(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////
		case 2609:		//Quasit and Imp DR
			PS_Ability_FamiliarDR(oPC, nSpell);
		break;
///////////////////////////////////////////////////////////////////////////////////	
		case 2610:		//Quasit and Imp Alternate Form - Bat
		{	PS_FamiliarForm_Bat(oPC);						}
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 2611:		//Quasit Alternate Form - Cat
		{	PS_FamiliarForm_Cat(oPC);						}
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 2612:		//Quasit Alternate Form - Rat
		{	PS_FamiliarForm_Rat(oPC);						}
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 2613:		//Imp Alternate Form - Spider
		{	PS_FamiliarForm_Spider(oPC);						}
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 2614:		//Imp Alternate Form - Weasel
		{	PS_FamiliarForm_Weasel(oPC);						}
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 1907 :		//Rakshasa Austerities
			PS_Ability_Austerities(oPC);
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 1908 :		//Rakshasa Austerity Truth
			PS_Ability_Austerity_Truth(oPC);
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 1909 :		//Rakshasa SR
			PS_Ability_Rakshasa_SR(oPC);
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 1910 :		//Rakshasa Reincarnate
			PS_Ability_Reincarnate(oPC);
		break;	
///////////////////////////////////////////////////////////////////////////////////
		case 1911 :		//Rakshasa AC
			PS_Ability_Austere_AC(oPC, nSpell);
		break;	
///////////////////////////////////////////////////////////////////////////////////
	}
}