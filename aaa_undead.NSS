/* Feat created by Ceremorph 11/25/15
All about undead...  */

#include "x2_inc_spellhook"
#include "aaa_undead_inc"
#include "aaa_constants"

void main()
{
	if (!X2PreSpellCastCode())
    {	return;	}

    object oPC 		= OBJECT_SELF;
	object oTarget	= GetSpellTargetObject();
	object 	oItem	= GetItemPossessedBy(oPC,"ps_essence");
	int nSpell 		= GetSpellId();
	int iLevel;
	int iCLev;
	
	switch (nSpell)
	{
////////////////////////////////////////////////////////////////////////////////////
		case 328 :		//Vampire Alternate Form - Lesser Wyvern
		{	PS_Vamp_AltForm_Wyvern(oPC, nSpell);			}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 329 :		//Vampire Blood Frenzy
		{	iLevel = GetLevelByClass(CLASS_TYPE_VAMPIRE_DRA_PRC, oPC);
			PS_Vamp_BloodFrenzy(oPC, iLevel, nSpell);			}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 330 :		//Vampire Alternate Form - Terror Wolf
		{	PS_Vamp_AltForm_TerrorWolf(oPC, nSpell);			}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1301 :		//Death Knight Abyssal Blast
		{	iLevel = GetLevelByClass(CLASS_TYPE_DEATH_KNIGHT_PRC, oPC);
			PS_DKAbyssalBlast(oPC, iLevel, nSpell);			}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1302 :		//Death Knight Immunity
		{	PS_DKImmunity(oPC, nSpell);						}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1303 :		//Death Knight Negative Weapon
		{	PS_DKNegativeWeapon(oPC, nSpell);				}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1304 :		//Death Knight Damage Reduction
		{	PS_DKDamageReduction(oPC, nSpell);				}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1305 :		//Death Knight Symbol of Pain
		{	PS_DKSymbolOfPain(oPC, nSpell);					}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1306 :		//Death Knight Fear Aura
		{	PS_DKFearAura(oPC, nSpell);						}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1307 :		//Vampire Natural Armor
		{	PS_VampArmor(oPC);								}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1308 :		//Vampire Slam
		{	PS_VampSlam(oPC, oTarget, nSpell);				}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1309 :		//Vampire Drain Blood
		{	PS_VampDrainBlood(oPC, oTarget, nSpell);		}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1311 :		//Vampire Alternate Form - Bat
		{	PS_VampAltForm_Bat(oPC, nSpell);						}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1312 :		//Vampire Alternate Form - Wolf
		{	PS_VampAltForm_Wolf(oPC, nSpell);						}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1313 :		//Vampire Alternate Form - Gaseous
		{	PS_VampAltForm_Gas(oPC, nSpell);						}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1314 :		//Vampire Alternate Form - Dire Wolf
		{	PS_VampAltForm_DireWolf(oPC, nSpell);					}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1315 :		//Vampire Resistance
		{	PS_VampResistance(oPC, nSpell);					}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1316 :		//Vampire Fast Healing
		{	PS_VampFastHealing(oPC, nSpell);				}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1319 :		//Vampire DR
		{	PS_VampDR(oPC, nSpell);							}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1320 :		//Vampire Dominating Gaze
		{	PS_VampDominatingGaze(oPC, nSpell, oTarget);				}
		break;	
////////////////////////////////////////////////////////////////////////////////////
		case 1689 :		//Touch of Evil
		{	PS_Undead_TouchOfEvil(oPC);						}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1690 :		//Undead Racial Type
		{	PS_UndeadRacialType(oPC);						}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1691 :		//Undead Properties
		{	PS_UndeadProperties(oPC, nSpell);				}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1692 :		//Lich Rotting Visage
		{	PS_RottingVisage(oPC, nSpell);					}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1694 :		//Lich Paralyzing Touch
		{	PS_LichParalyzingTouch(oPC, oTarget, nSpell);	}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1695 :		//Lich Immunities
		{	PS_LichImmunity(oPC, nSpell);					}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1696 :		//Lich Damage Reduction
		{	PS_LichDR(oPC, nSpell);							}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1698 :		//Lich Fear Aura
		{	PS_LichFearAura(oPC, nSpell);					}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1699 :		//Lich Armor
		{	PS_NatArmor_Lich(oPC, nSpell);					}
		break;
////////////////////////////////////////////////////////////////////////////////////
		case 1832 :		//VampMap L5 Bonus
		{	PS_VampMal_BonusFeat(oPC, oItem, nSpell);					}
		break;
////////////////////////////////////////////////////////////////////////////////////
	}
}